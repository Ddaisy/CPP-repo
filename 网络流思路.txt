/*
1、无源汇有上下界最大流
建图模型：
对于每条边有一个上界容量up和一个下界容量low，我们让这条边的容量下界变为0，上界为up-low。
增设一个超级源点st和一个超级终点sd。
我们开设一个数组du[]来记录每个节点的流量情况。
du[i]=in[i]（i节点所有入流下界之和）-out[i]（i节点所有出流下界之和）。
当du[i]大于0的时候，st到i连一条流量为 du[i]的边。（入的多出的少，补入）
当du[i]小于0的时候，i到sd连一条流量为-du[i]的边。（入的少出的多，补出）
最后对（st，sd）求一次最大流即可，当maxflow==所有du[]>0之和，有可行解。
每条边实际流量为： low + 每条边的流量 （自由流）

2、有源汇有上下界的最大流
建图模型：
源点s，终点d。超级源点ss，超级终点dd。
增设一条从d到s容量为无穷的边p，那么原图就变成了一个无源汇的循环流图。
利用第1问判断可行解存在
当有可行流时，将p和ss、dd相关边容量改为0,在残余网络上，再对（s，d）进行一次最大流，此时得到的maxflow则为题目的解。
因为第一次maxflow只是求得所有满足下界的流量，而残留网络（s，d）路上还有许多自由流没有流满，
所有最终得到的maxflow=（第一次流满下界的流+第二次能流通的自由流）
每条边实际流量为： low + 每条边的流量 （自由流）

3、有源汇有上下界的最小流
建图模型：
按1方法建图  进行一次maxflow。
加一条（d，s）容量为无穷的边p，再进行一次maxflow，当且仅当maxflow==超级源点的出流量，有可行解。
解为p的流量。

4、混合图欧拉回路
基础：
无向图：图连通，且图中均为偶度顶点。
有向图：图连通，且图中所有顶点出入度相等。
建图模型：
读入边时，记录出入度，并将无向边定向（随意方向）后以1流量加入网络流图，有向边不加入网络流图。
扫描所有点，如果出入度差为奇数则不存在欧拉回路（改变无向边的方向只能使差+-2），
如果为偶数则加入网络流图（流量为 出入度差/2  出度大则连源点（同时记录这种边的总流量）  否则连汇点）
做最大流  如果满流则存在欧拉回路
将残余网络中剩余流量为0（原容量为1）的边反向  所得即是存在欧拉回路的有向图

5、最大权闭合图
基础：
闭合图：在一个图中，选取一些点构成集合记为V，且集合中的出边所指向的终点也在V中，则我们称V为闭合图。
最大权闭合图：在所有闭合图中，集合中点的权值之和最大的V，我们称V为最大权闭合图。
建图模型：
将点分成两个集合（二分图）。
源点向X集合（盈利集合）点连边容量为xi点权，汇点向Y集合（支出集合）点连边容量为yi点权绝对值（因为权值是负的）
如果原图有xi->yi的边  则连边xi到yi容量为无穷大
跑最大流maxflow
最大权闭合图的权值为 sum(xi)-maxflow  此时与源点连通的点即为最大权闭合图选出的点
最小割表示为了产生割而必须放弃的最小流量

6、最大密度子图
主算法:
零一规划，用二分来猜测最大密度为g（二分的精度为1/n/n即可），构造函数h(g)=(|E'|-g*|V'|)
设D为最优解，当h(g)<0,g>D；当h(g)=0,g=D；当h(g)>0,g<D；
建图模型:
将每条原无向边(u,v)替换为两条容量为1的有向边(u,v)和(v,u)
增加连接源S到原图每个点v的有向边(S,v),容量为U
增加连接原图每个点v到汇T的有向边(v,T),容量为(U+2*g-dv),其中dv为点v的度。
其中U为为了流量不出现负值而统一加的一个大数,取U=m即可。
到此有h(g)=(U*n-maxflow)/2
当h(g)=0（<eps）时，g即为最大密度，此时与源点S连通的点即为最大密度子图的V'集合
变形推广：
（1）如果边上带权，密度定义为sum(E')/num(V')
将上述模型二分精度改变，U改变。
dv变成与v关联的所有边的权值和，将原图无向边形成的两条有向边容量变成we边权
（2）如果点、边均带权，密度定义为 sum(V')*sum(E')/num(V')
将上述模型二分精度改变，U改变。
dv变成与v关联的所有边的权值和，将原图无向边形成的两条有向边容量变成we边权
v到T的有向边(v,T)容量变成(U+2*(g-wv)-dv)

7、有向无环图最小路径覆盖
定义：
用最少的线路数覆盖所有的点
建图模型：
将原图每个点i裂成二分图xi和yi点，xi表示路径的出，yi表示路径的入。
源点向每个xi连边，容量1，每个yi向汇点连边，容量1。
如果原图有i->j的边，则xi->yj连边容量1，表示路径从i出来并且进入j。
最小路径覆盖=点数-最大匹配数
路径覆盖方案：选择xi没有匹配的点当起点，按照match不断寻找路径。

8、二分图多重匹配
建图模型：
源点向xi连边，容量为xi可匹配次数。
汇点向yj连边，容量为yj可匹配次数。
如果xi和yj可以匹配，则连边容量1。
maxflow时，xi->yj容量变为0的边记录了匹配的方案。

9、最多不相交路径
题目：
最长上升子序列种类数（元素不重复利用）
思路：
利用最长上升子序列进行分层，即某个元素应该在序列中第几个位置。
层与层之间的点如果能保证递增的性质则连容量为1的边，此时maxflow即为最长上升子序列种类数。

10、二分图最大点权独立集（最小点权覆盖集）
源点向xi连边容量为xi点权，yj向汇点连边容量为yj点权。
如果原图xi->yj，则连一条容量为1的边。
maxflow=最小点权覆盖集，点权和-maxflow=最大点权独立集。

11、最长不相交路径
建图模型：
把原图第i个点拆成2个点xi和yi，连接xi和yi的边容量为1，费用为-1。
特殊地x1->y1和xn->yn容量设为路径条数，因为要起点终点要走路径条数次。
对于原图中i->j的有向边，连接yi->xj容量为1，费用为0的有向边。
求x1到yn的mcmf，如果不是满流，那么无解。否则存在解，即为|mincost+路径条数|。

12、分层图网络流
题目：
有一些运货机周期性的a1->a2->a3->a4...在各点之间运货，并且都有自己最大容量，每走过两站需要1s。
问多久能把n个货物从起点a全部运到终点b
建图模型：
首先判断从地球到月球是否存在一条路线，如果不存在那么无解。
如果有解把每个站点按照每天拆分成d个点，<i,d>表示第i个站第d天。建立附加源S汇T，顺序枚举答案Day。
（网络流往往适合枚举而不是二分，因为利用枚举可以不断改造残余网络，这时再求maxflow更快）
对于第Day天，从S到<a,Day>连接一条容量为无穷大的有向边，从<b,Day>到T连接一条容量为无穷大的有向边。
对于第i个运货机，设第Day-1天在x处，第Day天在y处，从<x,Day-1>到<y,Day>连接一条容量为该运货机容量的有向边。
对于第i个站点，从<i,Day-1>到<i,Day>连接一条容量为无穷大的有向边。
求maxflow，如果maxflow>=n，停止枚举，当前Day值就是答案。

13、最大权不相交（点相交、点边均可相交）路径
流表示路径，费用表示权。
（1）i->j转移边容量1，i->i'裂点容量1。（分别保证了路径的边、点不相交）
（2）i->j转移边容量1，不用裂点。（边不相交，不裂点则点可以多路径共用）
（3）i->j转移边容量无穷，不用裂点。（点边全无限制，流量只在源点s和多个起点a1、a2…的边上限制）
*/